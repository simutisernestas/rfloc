TODO:
- read on UWB https://scholar.google.com/scholar?hl=en&as_sdt=0%2C5&q=uwb&btnG=
# r**3 variance dependand on distances
# v cov
# make the scale of axes in the plot the same, so covariance is seen
# maybe plot the covariance matrix
# and think about 3d plotting
# write some python code to extract the data from tag, through serial connection
# ask about time line of the project ? can i do the report after new years
# how does gain traslate distance to pos ??

RTT could be obtained by FTM protocol but is difficult to obtain bc hardware support is very limited. Even then requires 
quite a bit of effort to install required driver, firmaware, kernel version. The distance measurement is not that precise.
Best case scenario gives 1-2m accuracy which is nice but more crude estimation would also work.

Positioning base on WiFi signal strenght is way easier. Basically could be implemented with any WiFi card without spending
additional time on setup. Accuracy is worse ~10m. But meets the requirements and prob is worth trying first before going to
alternatives. Turns out that the distance to signal curve flattens out at around 20m and cannot measure distances beyond that...

KEYWORDS:
 WiFi localization
 FTM RTT
 AoA
 ToA
 TDoA

tcpdump measure in nano precision :)
sudo tcpdump --time-stamp-precision=nanoseconds -tttt
sudo tcpdump -i wlp4s0 icmp -tttt --time-stamp-precision=nanoseconds --time-stamp-type=adapter_unsynced

So wifi frequency is maxa 80MHz which in time based methods alone results in max theoretical distance resolution of 3.5m of time based methods.

Measuring Round Trip Times to Determine the Distance Between WLAN Nodes
803 pdf page; data collection & processing
https://link.springer.com/content/pdf/10.1007/b136094.pdf
The resolution of these hardware time stamps, which are implemented in
most current WLAN products, is 1 Î¼s corresponding to 300 m. :D and they 
don't say how they get those hardware timestamps either, mistery still.

why some papers say that distance resolution is dependant on bandwidth?
even though the wifi freq is 2.4 of 5 GHz. How come the distance resolution
calculation only takes in bandwidth for example 20MHz or 40MHz???

How does UWB solve this? - that's probably the best shot pretty easy to implement
https://www.mouser.dk/ProductDetail/Qorvo/DWM3000EVB?qs=iLbezkQI%252BsgO%252Bhh8kPU5Xg%3D%3D
https://www.mouser.dk/new/qorvo/qorvo-dws3000evb-arduino-shield/
https://github.com/Makerfabs/Makerfabs-ESP32-UWB


Timestamping at application layer : )
https://www.ieee802.org/1/files/public/docs2008/avb-rhee-802-11n-timestamp-0908.pdf


Bluetooth low energy
5G
RSSI vs RTT

https://en.wikipedia.org/wiki/Free-space_path_loss

https://github.com/domienschepers/wifi-ftm
https://www.banshee-navigation.eu/blog/posts/what_is_wi-fi_rtt
https://www.winlab.rutgers.edu/~gruteser/projects/ftm/Setups.htm

wiki free space path loss

KF
https://idsc.ethz.ch/education/lectures/recursive-estimation.html
+ that book in github

On time-delays in KF
https://backend.orbit.dtu.dk/ws/portalfiles/portal/4363506/Larsen.pdf
